---
import { defaultLanguageCode, languageOptions } from "../i18n/ui"
import { getLanguageCodeFromUrl } from "../i18n/utils"
const languageCode = getLanguageCodeFromUrl(Astro.url) || defaultLanguageCode
const otherLanguageCodes = Object.keys(languageOptions).filter(
	(code) => code !== languageCode
)
---

<div class="relative inline-block">
	<details class="cursor-pointer language-selector">
		<summary class="list-none flex items-center gap-1">
			<span>{languageCode.toUpperCase()}</span>
			<svg
				width="10"
				height="6"
				viewBox="0 0 10 6"
				class="dropdown-arrow"
			>
				<path
					d="M1 1L5 5L9 1"
					stroke="currentColor"
					stroke-width="1.5"
					fill="none"></path>
			</svg>
		</summary>
		<ul
			class="absolute mt-2 left-0 bg-whiterounded py-1 min-w-[100px] z-10"
		>
			{
				otherLanguageCodes.map((code) => (
					<li>
						<a
							href={`/${code}/`}
							class="block px-4 py-2 transition"
							data-lang-code={code}
						>
							{code.toUpperCase()}
						</a>
					</li>
				))
			}
		</ul>
	</details>
</div>

<script>
	import type { LanguageCode } from "../i18n/utils"
	import { setCookie } from "../utils/cookie.js"

	function onLanguageSelected(
		languageCode: LanguageCode,
		redirectLink: string
	) {
		setCookie("lang", languageCode)
		window.location.href = redirectLink
	}

	document.addEventListener("DOMContentLoaded", () => {
		const langLinks = document.querySelectorAll("[data-lang-code]")

		langLinks.forEach((link) => {
			link.addEventListener("click", (event) => {
				event.preventDefault()

				const target = event.target
				if (!(target instanceof HTMLElement)) return

				const languageCode = target.dataset.langCode as LanguageCode
				const redirectLink = link.getAttribute("href") || "/"

				if (languageCode) {
					onLanguageSelected(languageCode, redirectLink)
				}
			})
		})
	})
</script>
