---
interface Props {
	t: (key: string) => string
	flexDirection?: string
}

const { t, flexDirection = "row" } = Astro.props as Props
const links = ["#contacts", "#services", "#location", "#socials"]
---

<ul class={`flex flex-${flexDirection} gap-4 overflow-x-auto max-w-full`}>
	{
		links.map((link) => {
			const key = link.startsWith("#") ? link.slice(1) : link

			return (
				<li class="flex-shrink-0">
					<a
						href={link}
						class="group relative px-2 py-1 text-text-primary focus:outline-none focus:ring-2 focus:ring-hover-primary whitespace-nowrap"
					>
						<span class="relative z-10">{t("nav." + key)}</span>
						<span class="absolute left-0 bottom-0 h-0.5 w-0 bg-hover-primary transition-all duration-300 group-hover:w-full" />
					</a>
				</li>
			)
		})
	}
</ul>

<script>
	import HandleMissingAnchorRedirects from "../../scripts/HandleMissingAnchorRedirects"

	HandleMissingAnchorRedirects()
</script>
